/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package misc;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import static misc.Main_Page.functiongettingtotals;

/**
 *
 * @author Abubakar Manzoor
 */
public class New_Non_teaching_form1 extends javax.swing.JFrame {

    /**
     * Creates Non-Teaching Form
     */
    String Staff_type = "non_teaching";
    String formno;
    String staffid;
    String firstname;
    String lastname;
    String CNIC;
    String DOB;
    String fathername;
    String fatherCNIC;
    String religion;
    String district;
    String contacthome;
    String mobile;
    String postaladress;
    String permanentadress;

    String degree1 = "none";
    String degree2 = "none";

    String year1 = "none";
    String year2 = "none";

    String grade1 = "none";
    String grade2 = "none";

    String university1 = "none";
    String university2 = "none";

    String description;
    String salary;
    String pic_adress;

    String imgPath = null;
    String path = null;

    void timereciever4(String month4, int year4) {
        month = month4;
        year = year4;
    }
    String month;
    int year;

    //This Function gets the label size and sets our picture according to the get_label size
    public ImageIcon ResizeImage(String ImagePath, byte[] pic) {
        ImageIcon MyImage = null;
        if (ImagePath != null) {
            MyImage = new ImageIcon(ImagePath);
        } else {
            MyImage = new ImageIcon(pic);
        }
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lbl_Image.getWidth(), lbl_Image.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    public New_Non_teaching_form1() {
        initComponents();
    }

    public void close() {

        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TF_firstname = new javax.swing.JTextField();
        TF_lastname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        TF_mobile = new javax.swing.JFormattedTextField();
        TF_fathername = new javax.swing.JTextField();
        TF_religion = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        TF_postaladress = new javax.swing.JTextField();
        TF_description = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TF_district = new javax.swing.JTextField();
        NonTeaching_Browse_Button = new javax.swing.JButton();
        NonTeaching_Save_Button = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        TF_staffid = new javax.swing.JTextField();
        panel1 = new java.awt.Panel();
        jLabel4 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        TF_permanentaddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        TF_degree1 = new javax.swing.JTextField();
        TF_year1 = new javax.swing.JTextField();
        TF_grade1 = new javax.swing.JTextField();
        TF_university1 = new javax.swing.JTextField();
        TF_degree2 = new javax.swing.JTextField();
        TF_year2 = new javax.swing.JTextField();
        TF_grade2 = new javax.swing.JTextField();
        TF_university2 = new javax.swing.JTextField();
        TF_fatherCNIC = new javax.swing.JFormattedTextField();
        TF_CNIC = new javax.swing.JFormattedTextField();
        TF_DOB = new javax.swing.JFormattedTextField();
        TF_contacthome = new javax.swing.JFormattedTextField();
        lbl_Image = new javax.swing.JLabel();
        TF_salary = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Teacher Information");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                newnonteachingclosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("First Name :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 130, 70, 17);

        TF_firstname.setForeground(new java.awt.Color(102, 102, 102));
        TF_firstname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_firstname.setToolTipText("");
        TF_firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_firstnameActionPerformed(evt);
            }
        });
        getContentPane().add(TF_firstname);
        TF_firstname.setBounds(150, 130, 171, 20);

        TF_lastname.setForeground(new java.awt.Color(102, 102, 102));
        TF_lastname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_lastname.setToolTipText("");
        getContentPane().add(TF_lastname);
        TF_lastname.setBounds(460, 130, 171, 20);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Last Name :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(360, 130, 68, 17);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Father's  Name :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 190, 93, 17);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Father's  CNIC :");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(360, 190, 93, 17);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("CNIC :");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 160, 40, 17);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("DOB :");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(360, 160, 35, 17);

        TF_mobile.setForeground(new java.awt.Color(102, 102, 102));
        try {
            TF_mobile.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_mobile.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_mobile.setToolTipText("");
        getContentPane().add(TF_mobile);
        TF_mobile.setBounds(460, 250, 171, 20);

        TF_fathername.setForeground(new java.awt.Color(102, 102, 102));
        TF_fathername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_fathername.setToolTipText("");
        getContentPane().add(TF_fathername);
        TF_fathername.setBounds(150, 190, 171, 20);

        TF_religion.setForeground(new java.awt.Color(102, 102, 102));
        TF_religion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_religion.setToolTipText("");
        getContentPane().add(TF_religion);
        TF_religion.setBounds(150, 220, 171, 20);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Religion :");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(20, 220, 60, 17);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Contact (Home) : ");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(20, 250, 102, 17);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Mobile : ");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(360, 250, 49, 17);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Postal Address :");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(20, 280, 91, 17);

        TF_postaladress.setForeground(new java.awt.Color(102, 102, 102));
        TF_postaladress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_postaladress.setToolTipText("");
        TF_postaladress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_postaladressActionPerformed(evt);
            }
        });
        getContentPane().add(TF_postaladress);
        TF_postaladress.setBounds(150, 280, 480, 20);

        TF_description.setForeground(new java.awt.Color(102, 102, 102));
        TF_description.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_descriptionActionPerformed(evt);
            }
        });
        getContentPane().add(TF_description);
        TF_description.setBounds(150, 490, 530, 30);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Job Description :");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(20, 495, 96, 17);

        TF_district.setForeground(new java.awt.Color(102, 102, 102));
        TF_district.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_district.setToolTipText("");
        getContentPane().add(TF_district);
        TF_district.setBounds(460, 220, 171, 20);

        NonTeaching_Browse_Button.setText("Browse");
        NonTeaching_Browse_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NonTeaching_Browse_ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(NonTeaching_Browse_Button);
        NonTeaching_Browse_Button.setBounds(782, 299, 118, 23);

        NonTeaching_Save_Button.setText("Save");
        NonTeaching_Save_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NonTeaching_Save_ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(NonTeaching_Save_Button);
        NonTeaching_Save_Button.setBounds(805, 500, 80, 25);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("District :");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(360, 220, 49, 17);

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel28.setText("Staff ID:");
        getContentPane().add(jLabel28);
        jLabel28.setBounds(20, 100, 50, 17);

        TF_staffid.setForeground(new java.awt.Color(102, 102, 102));
        TF_staffid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_staffid.setToolTipText("");
        TF_staffid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_staffidActionPerformed(evt);
            }
        });
        getContentPane().add(TF_staffid);
        TF_staffid.setBounds(80, 100, 60, 20);

        panel1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 905, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(panel1);
        panel1.setBounds(20, 70, 905, 10);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Non Teaching Admission Form");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 15, 900, 40);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Permanent Address :");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(20, 310, 117, 17);

        TF_permanentaddress.setForeground(new java.awt.Color(102, 102, 102));
        TF_permanentaddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_permanentaddress.setToolTipText("");
        TF_permanentaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_permanentaddressActionPerformed(evt);
            }
        });
        getContentPane().add(TF_permanentaddress);
        TF_permanentaddress.setBounds(150, 310, 480, 20);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Qualification");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 370, 660, 30);

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Degree/Program");
        getContentPane().add(jLabel27);
        jLabel27.setBounds(20, 400, 200, 17);

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Year Passing");
        getContentPane().add(jLabel31);
        jLabel31.setBounds(250, 400, 80, 17);

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Grade / %age");
        getContentPane().add(jLabel34);
        jLabel34.setBounds(370, 400, 80, 17);

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Board/University");
        getContentPane().add(jLabel35);
        jLabel35.setBounds(480, 400, 190, 17);

        TF_degree1.setForeground(new java.awt.Color(102, 102, 102));
        TF_degree1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_degree1.setToolTipText("");
        getContentPane().add(TF_degree1);
        TF_degree1.setBounds(20, 430, 200, 20);

        TF_year1.setForeground(new java.awt.Color(102, 102, 102));
        TF_year1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_year1.setToolTipText("");
        getContentPane().add(TF_year1);
        TF_year1.setBounds(250, 430, 80, 20);

        TF_grade1.setForeground(new java.awt.Color(102, 102, 102));
        TF_grade1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_grade1.setToolTipText("");
        getContentPane().add(TF_grade1);
        TF_grade1.setBounds(370, 430, 80, 20);

        TF_university1.setForeground(new java.awt.Color(102, 102, 102));
        TF_university1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(TF_university1);
        TF_university1.setBounds(480, 430, 200, 20);

        TF_degree2.setForeground(new java.awt.Color(102, 102, 102));
        TF_degree2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_degree2.setToolTipText("");
        getContentPane().add(TF_degree2);
        TF_degree2.setBounds(20, 460, 200, 20);

        TF_year2.setForeground(new java.awt.Color(102, 102, 102));
        TF_year2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_year2.setToolTipText("");
        getContentPane().add(TF_year2);
        TF_year2.setBounds(250, 460, 80, 20);

        TF_grade2.setForeground(new java.awt.Color(102, 102, 102));
        TF_grade2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(TF_grade2);
        TF_grade2.setBounds(370, 460, 80, 20);

        TF_university2.setForeground(new java.awt.Color(102, 102, 102));
        TF_university2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(TF_university2);
        TF_university2.setBounds(480, 460, 200, 20);

        TF_fatherCNIC.setForeground(new java.awt.Color(102, 102, 102));
        try {
            TF_fatherCNIC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-#######-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_fatherCNIC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_fatherCNIC.setToolTipText("");
        getContentPane().add(TF_fatherCNIC);
        TF_fatherCNIC.setBounds(460, 190, 170, 20);

        TF_CNIC.setForeground(new java.awt.Color(102, 102, 102));
        try {
            TF_CNIC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-#######-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_CNIC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_CNIC.setToolTipText("");
        getContentPane().add(TF_CNIC);
        TF_CNIC.setBounds(150, 160, 170, 20);

        TF_DOB.setForeground(new java.awt.Color(102, 102, 102));
        try {
            TF_DOB.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_DOB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_DOB.setToolTipText("");
        TF_DOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_DOBActionPerformed(evt);
            }
        });
        getContentPane().add(TF_DOB);
        TF_DOB.setBounds(460, 160, 171, 20);

        TF_contacthome.setForeground(new java.awt.Color(102, 102, 102));
        try {
            TF_contacthome.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TF_contacthome.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_contacthome.setToolTipText("");
        getContentPane().add(TF_contacthome);
        TF_contacthome.setBounds(150, 250, 171, 20);

        lbl_Image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lbl_Image);
        lbl_Image.setBounds(770, 130, 140, 160);

        TF_salary.setForeground(new java.awt.Color(102, 102, 102));
        TF_salary.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TF_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_salaryActionPerformed(evt);
            }
        });
        getContentPane().add(TF_salary);
        TF_salary.setBounds(150, 340, 171, 20);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setText("Salary :");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(20, 340, 42, 17);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/misc/950, 550 Background.jpg"))); // NOI18N
        getContentPane().add(jLabel33);
        jLabel33.setBounds(0, 0, 950, 550);

        setSize(new java.awt.Dimension(952, 579));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TF_postaladressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_postaladressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_postaladressActionPerformed

    private void TF_descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_descriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_descriptionActionPerformed

    private void TF_permanentaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_permanentaddressActionPerformed

    }//GEN-LAST:event_TF_permanentaddressActionPerformed

    int Staff_found_or_not(String stafftype1, String staffRollno) {
        int found = 0;

        String Query = "select * from teacher_admission where Staff_type = '" + stafftype1 + "';";

        try {

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/misc", "root", "");

            PreparedStatement stmt = con.prepareStatement(Query);
            ResultSet r1 = stmt.executeQuery();

            while (r1.next()) {
                String rollnogetter = r1.getString("teacher_id");

                if (rollnogetter == null ? staffRollno == null : rollnogetter.equals(staffRollno)) {
                    found = 1;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        return found;
    }

    //Function To Save Data
    private void NonTeaching_Save_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NonTeaching_Save_ButtonActionPerformed

        staffid = TF_staffid.getText();

        int foundornot = Staff_found_or_not("non_teaching", staffid);

        if (foundornot == 0) {
            firstname = TF_firstname.getText();
            lastname = TF_lastname.getText();
            CNIC = TF_CNIC.getText();
            DOB = TF_DOB.getText();
            fathername = TF_fathername.getText();
            fatherCNIC = TF_fatherCNIC.getText();
            religion = TF_religion.getText();
            district = TF_district.getText();
            contacthome = TF_contacthome.getText();
            mobile = TF_mobile.getText();
            postaladress = TF_postaladress.getText();
            permanentadress = TF_permanentaddress.getText();
            degree1 = TF_degree1.getText();
            year1 = TF_year1.getText();
            grade1 = TF_grade1.getText();
            university1 = TF_university1.getText();
            degree2 = TF_degree2.getText();
            year2 = TF_year2.getText();
            grade2 = TF_grade2.getText();
            university2 = TF_university2.getText();
            pic_adress = path;
            description = TF_description.getText();
            salary = TF_salary.getText();

            int value1 = check_empty_values();

            if (value1 == 1) {
                data_insert_into_database();
                Set_field_to_empty();
                JOptionPane.showMessageDialog(null, "Non-Teaching Staff Successfully Admitted");
            } else {
                JOptionPane.showMessageDialog(null, "Teacher not Successfully Admitted Successfully Please Fill all the Fields");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Staff ID Already existed in the System");
        }
    }//GEN-LAST:event_NonTeaching_Save_ButtonActionPerformed

    private void TF_staffidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_staffidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_staffidActionPerformed

    private void TF_firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_firstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_firstnameActionPerformed

    // Function To Choose File Image From PC:
    private void NonTeaching_Browse_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NonTeaching_Browse_ButtonActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Imges", "jpg", "gif", "png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        //if the user click on save in JFileChoose
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();
            path = selectedFile.getAbsolutePath();
            lbl_Image.setIcon(ResizeImage(path, null));
            imgPath = path;

            path = path.replace("\\", "\\\\");

        } //if the user click on save in Jfilechooser
        else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("No File Selected");
        }
    }//GEN-LAST:event_NonTeaching_Browse_ButtonActionPerformed

    private void TF_DOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_DOBActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_TF_DOBActionPerformed

    private void TF_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_salaryActionPerformed

    private void newnonteachingclosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_newnonteachingclosing

        dispose();
        Main_Page.functiongettingtotals();
        Main_Page.jButton9.setEnabled(true);

    }//GEN-LAST:event_newnonteachingclosing

    //Function To Insert Data Into Database
    void data_insert_into_database() {

        String teacher_table = "teacher_attendance_" + month + "_" + year;

        String new_admission_query;
        String attendance_query;
        String salary_query;

        new_admission_query = "insert into teacher_admission(Staff_type, teacher_id, first_name, last_name, teacher_cnic, dob, fathers_name, fathers_cnic, religion, District, contact_home, mobile, postal_address,permanent_address, degree1, year_passing1, grade1, uni1, degree2, year_passing2, grade2, uni2, picadress, job_description) values('" + Staff_type + "','" + staffid + "','" + firstname + "','" + lastname + "','" + CNIC + "','" + DOB + "','" + fathername + "','" + fatherCNIC + "','" + religion + "','" + district + "','" + contacthome + "','" + mobile + "','" + postaladress + "','" + permanentadress + "','" + degree1 + "','" + year1 + "','" + grade1 + "','" + university1 + "','" + degree2 + "','" + year2 + "','" + grade2 + "','" + university2 + "','" + pic_adress + "','" + description + "');";
        attendance_query = "insert into " + teacher_table + "(Staff_type, Staff_id, Name) values ( 'non_teaching', '" + staffid + "','" + firstname + "');";
        salary_query = "insert into salary(stafftype, staffid, staffname, totalsalary) values( 'non_teaching' , " + staffid + " , '" + firstname + "' , '" + salary + "');";

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/misc", "root", "");
            //here sonoo is database name, root is username and password
            java.sql.Statement stmt = con.createStatement();

            stmt.executeUpdate(new_admission_query);
            stmt.executeUpdate(salary_query);
            stmt.executeUpdate(attendance_query);

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    //Function To Check Whether the Fields are Empty or Not
    int check_empty_values() {

        int value = 0;

        if ("".equals(staffid)) {
            JOptionPane.showMessageDialog(null, "Staff Field Empty");
        } else if ("".equals(firstname)) {
            JOptionPane.showMessageDialog(null, "First_Name Field Empty");
        } else if ("".equals(lastname)) {
            JOptionPane.showMessageDialog(null, "Last_Name Field Empty");
        } else if ("".equals(CNIC)) {
            JOptionPane.showMessageDialog(null, "CNIC Field Empty");
        } else if ("".equals(DOB)) {
            JOptionPane.showMessageDialog(null, "Date_Of_Birth Field Empty");
        } else if ("".equals(fathername)) {
            JOptionPane.showMessageDialog(null, "Father_Name Field Empty");
        } else if ("".equals(fatherCNIC)) {
            JOptionPane.showMessageDialog(null, "Father_CNIC Field Empty");
        } else if ("".equals(religion)) {
            JOptionPane.showMessageDialog(null, "Religion Field Empty");
        } else if ("".equals(district)) {
            JOptionPane.showMessageDialog(null, "District Field Empty");
        } else if ("".equals(contacthome)) {
            JOptionPane.showMessageDialog(null, "Contact_Home Field Empty");
        } else if ("".equals(mobile)) {
            JOptionPane.showMessageDialog(null, "Mobile Field Empty");
        } else if ("".equals(postaladress)) {
            JOptionPane.showMessageDialog(null, "Postal_Address Field Empty");
        } else if ("".equals(permanentadress)) {
            JOptionPane.showMessageDialog(null, "Permanent_Address Field Empty");
        } else if ("".equals(description)) {
            JOptionPane.showMessageDialog(null, "Job Description Field Empty");
        } else if ("".equals(salary)) {
            JOptionPane.showMessageDialog(null, "Salary Field Empty");
        } else if (pic_adress == null) {
            JOptionPane.showMessageDialog(null, "Please Choose the Picture");
        } else {
            value = 1;
        }
        return value;
    }

    //Function To Set The Fields To Empty
    public void Set_field_to_empty() {
        TF_staffid.setText("");
        TF_firstname.setText("");
        TF_lastname.setText("");
        TF_CNIC.setText("");
        TF_DOB.setText("");
        TF_fathername.setText("");
        TF_fatherCNIC.setText("");
        TF_religion.setText("");
        TF_district.setText("");
        TF_contacthome.setText("");
        TF_mobile.setText("");
        TF_postaladress.setText("");
        TF_permanentaddress.setText("");
        TF_degree1.setText("");
        TF_year1.setText("");
        TF_grade1.setText("");
        TF_university1.setText("");
        TF_degree2.setText("");
        TF_year2.setText("");
        TF_grade2.setText("");
        TF_university2.setText("");
        TF_description.setText("");
        TF_salary.setText("");
        lbl_Image.setIcon(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(New_Non_teaching_form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(New_Non_teaching_form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(New_Non_teaching_form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(New_Non_teaching_form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new New_Non_teaching_form1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NonTeaching_Browse_Button;
    private javax.swing.JButton NonTeaching_Save_Button;
    private javax.swing.JFormattedTextField TF_CNIC;
    private javax.swing.JFormattedTextField TF_DOB;
    private javax.swing.JFormattedTextField TF_contacthome;
    private javax.swing.JTextField TF_degree1;
    private javax.swing.JTextField TF_degree2;
    private javax.swing.JTextField TF_description;
    private javax.swing.JTextField TF_district;
    private javax.swing.JFormattedTextField TF_fatherCNIC;
    private javax.swing.JTextField TF_fathername;
    private javax.swing.JTextField TF_firstname;
    private javax.swing.JTextField TF_grade1;
    private javax.swing.JTextField TF_grade2;
    private javax.swing.JTextField TF_lastname;
    private javax.swing.JFormattedTextField TF_mobile;
    private javax.swing.JTextField TF_permanentaddress;
    private javax.swing.JTextField TF_postaladress;
    private javax.swing.JTextField TF_religion;
    private javax.swing.JTextField TF_salary;
    private javax.swing.JTextField TF_staffid;
    private javax.swing.JTextField TF_university1;
    private javax.swing.JTextField TF_university2;
    private javax.swing.JTextField TF_year1;
    private javax.swing.JTextField TF_year2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbl_Image;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
